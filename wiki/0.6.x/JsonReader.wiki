#summary Mapping JSON to POJOs

= Introduction =
Let's assume you want to map the following JSON data
{{{
{
    "isbn": "978-0345417954", 
    "pages": 432,
    "title": "The Hotel New Hampshire",
    "author": {
        "firstname": "John",
        "surname": "Irving", 
    },
    "reviews": [
        "A hectic gaudy saga with the verve of a Marx Brothers movie.", 
        "Rejoice! John Irving has written another book according to your world.", 
        "Spellbinding, intensely human, a high-wire act of dazzling virtuosity."
    ]
}    
}}}

Therefore you have the following POJOs in your GWT client
{{{
public class Book
{
    String isbn;
    int pages;
    String title;
    Author author;
    List<String> reviews;
}

public class Author
{
    String firstname;
    String surname;
}
}}}

To map the JSON to your classes, all you have to do is annotate the relevant fields and define an interface of type JsonReader`<T>`;
{{{
public class Book
{
    interface BookReader extends JsonReader<Book> {}
    public static final BookReader JSON = GWT.create(BookReader.class);

    @Json String isbn;
    @Json int pages;
    @Json String title;
    @Json Author author;
    @Json List<String> reviews;
}

public class Author
{
    interface AuthorReader extends JsonReader<Author> {}
    public static final AuthorReader JSON = GWT.create(AuthorReader.class);

    @Json String firstname;
    @Json String surname;
}
}}}

Now you can map the JSON by calling
{{{
String jsonString = ...; // the above JSON data
Book book = Book.JSON.read(jsonString);
}}}

Please note that Piriti does *not* use javascript `eval()` but the browsers native JSON parser (or a javascript emulation if no native parser is available). Hence the JSON data must confirm to the syntax described at [http://json.org/ JSON.org]. Especially the keys must be enclosed in ". So instead of 
{{{
{ readonly: true, name: "Foo", createdAt: "08.01.2010", count: 20 }
}}}
you have to use
{{{
{ "readonly": true, "name": "Foo", "createdAt": "08.01.2010", "count": 20 }
}}}