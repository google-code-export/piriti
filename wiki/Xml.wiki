#summary XML related features

XML mapping is done using the @Xml annotation. This annotation has the following attributes:
  * order: The processing order
  * property: The name of the field / property. Only necessary for [Features#External_Mappings external mappings].
  * value: An XPath expression to select the XML data. Defaults to "" which means that the fields name is taken as a base for the XPath expression.
  * format: The format to use when converting the XML data to the fields type. Defaults to "".
  * stripWsnl: Flag whether to white spaces and new lines.
  * converter: A custom [Converters converter]
  * getter: A custom [GetterSetter getter]
  * setter: A custom [GetterSetter setter]  

The @Xml annotation is specified for every field you want to map. If no XPath expression is given, the fields name is taken as a base for the XPath expression. The XML is selected and converted if necessary to the type of the annotated property. For some types you can specify a format and a custom converter which is used to parse / serialize the XML data to / from the properties type.
The annotation must be placed on a field in the POJO or must be part of the @XmlMappings annotation. When placed on a field and the field is not accessible, Piriti tries to use setters / getters instead. 
<table cellpadding="3" cellspacing="0" border="1">
<tr>
<th align="left">Type</th>
<th align="left">Default XPath expression</th>
<th align="left">Format options</th>
<th>Converter options</th>
</tr>
<tr>
<td>boolean, Boolean</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>byte, Byte</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>char, Character</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>java.util.Date</td>
<td>`<fieldname>`/text()</td>
<td>If no format is specified a [http://piriti.googlecode.com/svn/site/apidocs/constant-values.html#name.pehl.gwt.piriti.client.converter.DateConverter.DEFAULT_FORMAT default format] is used.<br/> 
Otherwise must be a valid date format as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/DateTimeFormat.html DateTimeFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>double, Double</td>
<td>`<fieldname>`/text()</td>
<td>If no format is specified the XML data is converted using
[http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Double.html#parseDouble(java.lang.String) Double.parseDouble(String)].<br/> 
Otherwise must be a valid number format
as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>float, Float</td>
<td>`<fieldname>`/text()</td>
<td>If no format is specified the XML data is converted using
[http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Float.html#parseFloat(java.lang.String) Float.parseFloat(String)].<br/> 
Otherwise must be a valid number format
as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>int, Integer</td>
<td>`<fieldname>`/text()</td>
<td>If no format is specified the XML data is converted using
[http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Integer.html#parseInt(java.lang.String) Integer.parseInt(String)].<br/> 
Otherwise must be a valid number format
as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>long, Long</td>
<td>`<fieldname>`/text()</td>
<td>If no format is specified the XML data is converted using
[http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Long.html#parseLong(java.lang.String) Long.parseLong(String)].<br/> 
Otherwise must be a valid number format
as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>short, Short</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>String</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>Enums</td>
<td>`<fieldname>`/text()</td>
<td>No format supported. If specified it is ignored.</td>
</tr>
<tr>
<td>All types T for which a XmlReader`<T>` is registered</td>
<td>`<fieldname>`</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>Arrays of the above types</td>
<td>`<fieldname>`</td>
<td>If a format is specified it is applied for all array elements.</td>
<td>If a custom converter is specified it is applied to all array elements.</td>
</tr>
<tr>
<td>Typed collections of the above types</td>
<td>`<fieldname>`</td>
<td>If a format is specified it is applied for all collection elements.</td>
<td>If a custom converter is specified it is applied to all array elements.</td>
</tr>
</table>
