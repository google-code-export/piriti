#summary External mappings in Piriti

= External Mappings  =
The previous samples all used the mapping annotations directly in the POJO. If you don't want to 'pollute' your POJOs with Piriti annotations or you don't have direct access to the POJOs source code, you can also define the mapping in an extra class:
{{{
public class Order
{
    private Date date;
    private List<OrderItem> items;
    
    // getters & setters
    ...
}

public class OrderItem
{
    private Product product;
    private int amount;
    
    // getters & setters
    ...
}

public class Product
{
    String id;
    String name;
    double price;

    // getters & setters
    ...
}

public class Readers
{
    @JsonMappings({
        @Json(property = "date", format = "dd.MM.yyyy"), 
        @Json(property = "items")})
    public interface OrderJsonReader extends JsonReader<Order> {}
    public static final OrderJsonReader ORDER = GWT.create(OrderJsonReader.class);

    @JsonMappings({
        @Json(property = "product"), 
        @Json(property = "amount")})
    public interface OrderItemJsonReader extends JsonReader<OrderItem> {}
    public static final OrderItemJsonReader ORDER_ITEM = GWT.create(OrderItemJsonReader.class);

    @JsonMappings({
        @Json(property = "id"), 
        @Json(property = "name"), 
        @Json(property = "price")})
    public interface ProductJsonReader extends JsonReader<Product> {}
    public static final ProductJsonReader PRODUCT = GWT.create(ProductJsonReader.class);
}
}}}    
When using external mappings there are a few things to notice:
  * The @Json or @Xml annotation must contain the properties name
  * All mappings are collected in a @JsonMappings or @XmlMappings annotation
  * The @JsonMappings or @XmlMappings annotation must be placed on the reader writer interface
  * The reader / writer definitions must be static
