#summary Description of the features and limitations of Piriti.
#labels Featured

Piriti is able to map fairly complex *JSON* and *XML* data to arbitrary POJOs. All mapping information is provided using annotations. The actual mapping code is generated for you using deferred binding and code generators. 

= Supported types =
The mapping annotations do not work on all types. The following tables show which types are supported by Piriti.
  * boolean, Boolean
  * byte, Byte
  * short, Short
  * int, Integer
  * long, Long
  * float, Float
  * double, Double
  * char, Character
  * String
  * java.util.Date
  * Enums
  * All types T for which a reader is registered
  * Arrays of the above types
  * Typed collections of the above types

= Supported collections =
When mapping collections the following types are supported:
  * Collection`<T>`. ArrayList`<T>` is choosen as the implementation.
  * List`<T>`. ArrayList`<T>` is choosen as the implementation.
  * ArrayList`<T>`
  * LinkedList`<T>`
  * Set`<T>`. HashSet`<T>` is choosen as the implementation.
  * HashSet`<T>`
  * SortedSet`<T>`. TreeSet`<T>` is choosen as the implementation.
  * TreeSet`<T>`

= Nested Models =
Because all reader instances are registered against a global registry, references to other models that also have a reader are recognized and also mapped. Therefore the reader instances must be defined as public static fields (name must not be `XML`):
{{{
public class Book
{
    interface BookReader extends XmlReader<Book> {}
    public static final BookReader XML = GWT.create(BookReader.class);

    ...
    @XmlField Author author;
}

public class Author
{
    interface AuthorReader extends XmlReader<Author> {}
    public static final AuthorReader SOME_FANCY_NAME = GWT.create(AuthorReader.class);

    ...
}
}}}

== References ==
The core XML mapping supports the mapping of XML references using ID and IDREF. See [XMLReferences] for more info.


= Extensions = 
Currently there are two extensions for Piriti:
  * [GXTExtension GXT extension]: Allows JSON / XML mapping to GXT models.
  * [RestletExtension Restlet extension]: Offers representations which use an XML / JSON reader.

= Limitations = 
The following lists summarize the limitations in Piriti.
  * Multi-dimensional arrays are not supported.
  * Arrays of collections / maps are not supported.
  * Untyped collections are not supported.
  * Collections of collections / maps are not supported.
  * Annotations are currently limited to fields. 
  * The annotated fields must not have private access modifiers.

= Planed =
In future releases the following features might be implemented:
  * Add support for references in JSON ([http://www.sitepen.com/blog/2008/06/17/json-referencing-in-dojo/ DOJO])
  * Add the ability to also generate JSON / XML data from the annotated models.