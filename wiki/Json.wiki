#summary JSON related features

= Introduction =
JSON mapping / serialization is done using the @Json annotation. This annotation has the following attributes:
  * order: The processing order
  * property: The name of the field. Only necessary for [ExternalMappings external mappings].
  * value: The key / JSONPath of the JSON data. Defaults to "" which means that the fields name is taken as a default.
  * format: The format to use when converting the JSON data to the fields type. Defaults to "".
  * converter: A custom [Converters converter]
  * getter: A custom [GetterSetter getter]
  * setter: A custom [GetterSetter setter]  

The @Json annotation is specified for every field you want to map / serialize. The JSON data is selected by a "path" expression. In the simplest case the path is just the key of the JSON data. For more complex cases, you can also use a [JsonPath JSONPath expression]. If necessary, the selected data is converted to the type of the annotated property. For some types you can specify a format and a custom converter which is used to parse / serialize the JSON data to / from the properties type.
The annotation must be placed on a field in the POJO or must be part of the @JsonMappings annotation. When placed on a field and the field is not accessible, Piriti tries to use setters / getters instead.
If no path is given, the fields name is taken as a default. For some types you can specify a format and converter which is used when converting the JSON data to the fields type:
<table cellpadding="3" cellspacing="0" border="1">
<tr>
<th align="left">Type</th>
<th>Default path expression</th>
<th>Format options</th>
<th>Converter options</th>
</tr>
<tr>
<td>boolean, Boolean</td>
<td>`<fieldname>`</td>
<td>Must be a JSON boolean. No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>byte, Byte</td>
<td>`<fieldname>`</td>
<td>Must be a JSON number. No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>char, Character</td>
<td>`<fieldname>`</td>
<td>Must be a JSON string. No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>java.util.Date</td>
<td>`<fieldname>`</td>
<td>Must be a JSON string. If no format is specified a [http://piriti.googlecode.com/svn/site/apidocs/constant-values.html#name.pehl.gwt.piriti.client.converter.DateConverter.DEFAULT_FORMAT default format] is used.<br/> 
Otherwise must be a valid date format as described by [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/DateTimeFormat.html DateTimeFormat]</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>double, Double</td>
<td>`<fieldname>`</td>
<td>If no format is specified the JSON data is expected to be a JSON number, otherwise the JSON data is expected to be a JSON string and the format must be a valid number format as described by  [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported (JSON data is expected to be a JSON string)</td>
</tr>
<tr>
<td>float, Float</td>
<td>`<fieldname>`</td>
<td>If no format is specified the JSON data is expected to be a JSON number, otherwise the JSON data is expected to be a JSON string and the format must be a valid number format as described by  [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported (JSON data is expected to be a JSON string)</td>
</tr>
<tr>
<td>int, Integer</td>
<td>`<fieldname>`</td>
<td>If no format is specified the JSON data is expected to be a JSON number, otherwise the JSON data is expected to be a JSON string and the format must be a valid number format as described by  [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported (JSON data is expected to be a JSON string)</td>
</tr>
<tr>
<td>long, Long</td>
<td>`<fieldname>`</td>
<td>If no format is specified the JSON data is expected to be a JSON number, otherwise the JSON data is expected to be a JSON string and the format must be a valid number format as described by  [http://google-web-toolkit.googlecode.com/svn/javadoc/2.0/com/google/gwt/i18n/client/NumberFormat.html NumberFormat]</td>
<td>Custom converter supported (JSON data is expected to be a JSON string)</td>
</tr>
<tr>
<td>short, Short</td>
<td>`<fieldname>`</td>
<td>Must be a JSON number. No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>String</td>
<td>`<fieldname>`</td>
<td>No format supported. If specified it is ignored.</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>Enums</td>
<td>`<fieldname>`</td>
<td>No format supported. If specified it is ignored.</td>
<td>Custom converter supported</td>
</tr>
<tr>
<td>All types T for which a JsonReader`<T>` is registered</td>
<td>`<fieldname>`</td>
<td>No format supported. If specified it is ignored.</td>
<td>No custom converter supported. If specified it is ignored.</td>
</tr>
<tr>
<td>Arrays of the above types</td>
<td>`<fieldname>`</td>
<td>If a format is specified it is applied for all array elements.</td>
<td>If a custom converter is specified it is applied to all array elements.</td>
</tr>
<tr>
<td>Typed collections of the above types</td>
<td>`<fieldname>`</td>
<td>If a format is specified it is applied for all collection elements.</td>
<td>If a custom converter is specified it is applied to all collection elements.</td>
</tr>
</table>