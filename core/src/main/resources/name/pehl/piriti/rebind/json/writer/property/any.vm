#parse("name/pehl/piriti/rebind/json/writer/property/commons.vm")
#set($reader = $property.variables.newVariable("Reader"))
#set($jsonObject = $property.variables.newVariable("JsonObject"))
#newConcreteTypes()
if ($jsonValue != null)
{
    #if ($property.native)
        #if($TypeUtils.isJsonValue($property.type))
            $value = $jsonValue;
        #elseif($TypeUtils.isJsonValueSubtype($property.type))
            if ($jsonValue instanceof $valueType) 
            {
                $value = ($parameterizedValueType)$jsonValue;
            }
        #else
            if (logger.isLoggable(SEVERE)) 
            {
                logger.log(SEVERE, "Cannot map property $property.name in ${modelType} nativly: Type $parameterizedValueType must be an instance of JSONValue.");
            }
        #end
    #else
		JsonReader<$parameterizedValueType> $reader = jsonRegistry.getReader(${valueType}.class);
		if ($reader != null)
		{
            JSONObject $jsonObject = ${jsonValue}.isObject();
            if ($jsonObject != null)
            {
                $value = ${reader}.read($jsonObject);
            }
		}
		else
		{
		    if (${jsonValue}.isNull() == null) 
		    {
		        JSONString jsonString = ${jsonValue}.isString();
		        if (jsonString != null)
		        {
		            String stringValue = jsonString.stringValue();
		            if (stringValue != null)
		            {
                        #convert("stringValue")
		            }
		        }
		    }
		}
    #end
    if ($value != null) 
    {
        #assignValue()
    }
}
