#set($modelType = $typeContext.type.qualifiedSourceName)
#set($modelParameterizedType = $typeContext.type.parameterizedQualifiedSourceName)

package ${typeContext.rwType.package.name};

import static java.util.logging.Level.*;
import static name.pehl.totoe.commons.client.WhitespaceHandling.*;

import java.util.ArrayList;
import java.util.List;

import name.pehl.piriti.xml.client.AbstractXmlReader;
import name.pehl.piriti.xml.client.XmlReader;
import name.pehl.totoe.xml.client.Element;
import name.pehl.totoe.xml.client.Node;

import com.google.gwt.core.client.GWT;

public class $implName extends AbstractXmlReader<$modelParameterizedType> implements $typeContext.rwType.qualifiedSourceName 
{
    // ----------------------------------------------------------- constructors

    public $implName() 
    {
        this.xmlRegistry.register(${modelType}.class, this);
    }
    
    
    // ------------------------------------------------------------ new methods
    
    protected $modelParameterizedType newModel()
    {
        $modelParameterizedType model = null;
        #if ($typeContext.instanceCreator)
            $typeContext.instanceCreator.qualifiedSourceName instanceCreator = GWT.create(${typeContext.instanceCreator.qualifiedSourceName}.class);
            model = instanceCreator.newInstance(jsonObject);
        #else
            model = GWT.create(${modelType}.class); 
        #end
        return model;
    }
    
    
    // -------------------------------------------------------- read properties
    
    protected $modelParameterizedType readProperties(Element element, $modelParameterizedType model) 
    {
        if (element != null) 
        {
            #foreach ($property in $typeContext.properties)
                #set($valueType = $property.type.qualifiedSourceName)
                #set($parameterizedValueType = $property.type.parameterizedQualifiedSourceName)
                #set($value = $property.variables.value)
                #set($valueAsString = $property.variables.valueAsString)
                #set($converter = $property.variables.newVariable("Converter"))
                
                // parsing template $property.template
                if (logger.isLoggable(FINE)) 
                {
                    logger.log(FINE, "Processing $parameterizedValueType $property.name");
                }
                $parameterizedValueType $value = null;
                ## Here happens the actual reading / conversion from element to $value
                #parse($property.template)
                if ($value != null) 
                {
                    #if ($property.setter)
                        $property.setter setter = GWT.create(${property.setter}.class);
                        setter.set(model, $value);
                    #else
                        #if ($property.accessibleField) 
                            model.$property.name = $value;
                        #elseif ($property.callableSetter)
                            model.${property.callableSetterName}($value);
                        #else
                            if (logger.isLoggable(SEVERE)) 
                            {
                                logger.log(SEVERE, "No accessible field or setter found for property $property.name in ${modelType}.");
                            }
                        #end
                    #end
                }
            #end
        }
        return model;
    }
}