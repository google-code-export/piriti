#set($valueType = $property.type.qualifiedSourceName)
#set($value = $property.variables.value)
#set($valueAsString = $property.variables.valueAsString)
#set($converter = $property.variables.newVariable("Converter"))

#logProperty()
$valueType $value = null;
String $valueAsString = element.selectValue("$property.pathOrName", $property.whitespaceHandling);
if ($valueAsString != null)
{
    Converter<$valueType> $converter = null;
    #if ($property.hasConverter()) #customConverter() #else #defaultConverter() #end
    if ($converter != null)
    {
        $value = ${converter}.convert($valueAsString);
    }
    else
    {
        boolean error = true;
        String[] stringValues = new String[]{$valueAsString, ${valueAsString}.toUpperCase(), ${valueAsString}.toLowerCase()};
        for (String s : stringValues)
        {
            try 
            {
                $value = ${property.enumType.qualifiedSourceName}.valueOf(s);
                error = false;
                break;
            }
            catch (IllegalArgumentException e) {} 
        }
        if (error)
        {
            if (logger.isLoggable(SEVERE)) 
            {
                logger.log(SEVERE, "Cannot convert any of " + stringValues + " to enum property $property.name in ${modelType} using ${valueType}.valueOf(String).");
            }
        }
    }
}    
if ($value != null) 
{
    #assignValue()
}
