## Logs info when a property mapping starts
#macro(logProperty)
if (logger.isLoggable(FINE)) 
{
    logger.log(FINE, "Processing $property");
}
#end


## Creates the converter
#macro(converter $type)
    #if ($property.hasConverter()) 
	    $converter = GWT.create(${property.converter.name}.class);
	    #if ($property.format) ${converter}.setFormat("$property.format"); #end
    #else 
	    #if ($property.format)
	        $converter = converterRegistry.get(${type}.class, "$property.format");
	        if ($converter == null)
	        {
	            // No converter with the specified format found in the
	            // registry --> Use the default one, set the format and
	            // register it against the registry
	            $converter = converterRegistry.get(${type}.class);
	            if ($converter != null)
	            {
	                ${converter}.setFormat("$property.format");
	                converterRegistry.register(${type}.class, ${converter}, "$property.format");
	            }
	            else
	            {
	                if (logger.isLoggable(SEVERE)) 
	                {
	                    logger.log(SEVERE, "No converter found for property $property.name with type $type in ${modelType}.");
	                }
	            }
	        }
	    #else
	        $converter = converterRegistry.get(${type}.class);
	    #end
    #end
#end


## Gets or selects the json value
#macro(getOrSelectJsonValue)
    #if ($property.jsonPath)
        $jsonValue = JsonPath.select(jsonObject, "$property.pathOrName");
    #else
        $jsonValue = jsonObject.get("$property.pathOrName");
    #end
#end


## Assigns the mapped value to the model property 
#macro(assignValue)
    #if ($property.setter)
        $property.setter.name setter = GWT.create(${property.setter.name}.class);
        setter.set(model, $value);
    #else
        #if ($property.accessibleField) 
            model.$property.name = $value;
        #elseif ($property.callableSetter) 
            model.${property.callableSetter.name}($value);
        #else
            if (logger.isLoggable(SEVERE)) 
            {
                logger.log(SEVERE, "No accessible field or setter found for property $property.name in ${modelType}.");
            }
        #end
    #end
#end