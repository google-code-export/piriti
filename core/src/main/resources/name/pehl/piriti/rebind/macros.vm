## Logs info when a property mapping starts
#macro(logProperty)
if (logger.isLoggable(FINE)) 
{
    logger.log(FINE, "Processing $property");
}
#end


#macro(newConcreteTypes)
	#foreach ($concreteType in $property.concreteTypes)
	    // if there are any reader / writer definitions in $concreteType.parameterizedQualifiedSourceName, this ensures they are registered
	    new ${concreteType.parameterizedQualifiedSourceName}();
	#end
#end


## Creates the custom converter
#macro(customConverter)
    $converter = GWT.create(${property.converter.name}.class);
    #if ($property.format) ${converter}.setFormat("$property.format"); #end
#end


## Tries to get the default converter from the converter registry 
#macro(defaultConverter $type)
    #if ($property.format)
        $converter = converterRegistry.get(${type}.class, "$property.format");
        if ($converter == null)
        {
            // No converter with the specified format found in the
            // registry --> Use the default one, set the format and
            // register it against the registry
            $converter = converterRegistry.get(${type}.class);
            if ($converter != null)
            {
                ${converter}.setFormat("$property.format");
                converterRegistry.register(${type}.class, ${converter}, "$property.format");
            }
            else
            {
                if (logger.isLoggable(SEVERE)) 
                {
                    logger.log(SEVERE, "No converter found for property $property.name with type $type in ${modelType}.");
                }
            }
        }
    #else
        $converter = converterRegistry.get(${type}.class);
    #end
#end


## Macro which combines the two converter macros from above
#macro(convert)
    Converter<$parameterizedValueType> $converter = null;
    #if ($property.hasConverter()) #customConverter() #else #defaultConverter($parameterizedValueType) #end
    if ($converter != null)
    {
        $value = ${converter}.convert(stringValue);
    }
#end


## Gets or selects the json value
#macro(getOrSelectJsonValue)
    #if ($property.jsonPath)
        $jsonValue = JsonPath.select(jsonObject, "$property.pathOrName");
    #else
        $jsonValue = jsonObject.get("$property.pathOrName");
    #end
#end


## Assigns the mapped value to the model property 
#macro(assignValue)
    #if ($property.setter)
        $property.setter.name setter = GWT.create(${property.setter.name}.class);
        setter.set(model, $value);
    #else
        #if ($property.accessibleField) 
            model.$property.name = $value;
        #elseif ($property.callableSetter) 
            model.${property.callableSetter.name}($value);
        #else
            if (logger.isLoggable(SEVERE)) 
            {
                logger.log(SEVERE, "No accessible field or setter found for property $property.name in ${modelType}.");
            }
        #end
    #end
#end