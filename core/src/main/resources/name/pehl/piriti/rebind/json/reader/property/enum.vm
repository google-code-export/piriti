#set($valueType = $property.type.qualifiedSourceName)
#set($value = $property.variables.value)
#set($jsonValue = $property.variables.newVariable("JsonValue"))
#set($converter = $property.variables.newVariable("Converter"))

#logProperty()
$valueType $value = null;
JSONValue $jsonValue = null;

#getOrSelectJsonValue()
if ($jsonValue != null)
{
    if (${jsonValue}.isNull() == null) 
    {
        JSONString jsonString = ${jsonValue}.isString();
        if (jsonString != null)
        {
            String stringValue = jsonString.stringValue();
            if (stringValue != null)
            {
				Converter<$valueType> $converter = null;
				#if ($property.hasConverter()) #customConverter() #else #defaultConverter() #end
                if ($converter != null)
                {
                    $value = ${converter}.convert(stringValue);
                }
                else
                {
                    boolean error = true;
                    String[] stringValues = new String[]{stringValue, stringValue.toUpperCase(), stringValue.toLowerCase()};
                    for (String s : stringValues)
                    {
	                    try 
	                    {
	                        $value = ${valueType}.valueOf(s);
	                        error = false;
	                        break;
	                    }
                        catch (IllegalArgumentException e) {} 
                    }
                    if (error)
                    {
                        if (logger.isLoggable(SEVERE)) 
                        {
                            logger.log(SEVERE, "Cannot convert any of " + stringValues + " to enum property $property.name in ${modelType} using ${valueType}.valueOf(String).");
                        }
                    }
                }
            }
        }
    }
	if ($value != null) 
    {
        #assignValue()
	}
}
