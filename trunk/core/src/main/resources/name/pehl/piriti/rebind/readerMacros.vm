#macro(readerImports)
	import static java.util.logging.Level.*;
	
	import java.util.ArrayList;
	import java.util.HashMap;
	import java.util.List;
	import java.util.Map;
	import java.util.logging.Logger;
	
	import name.pehl.piriti.commons.client.InstanceContextHolder;
	import name.pehl.piriti.commons.client.ModelReadEvent;
	import name.pehl.piriti.commons.client.ModelReadHandler;
	import name.pehl.piriti.converter.client.Converter;
	
	import com.google.gwt.core.client.GWT;
	import com.google.gwt.event.shared.GwtEvent;
	import com.google.gwt.event.shared.HandlerManager;
	import com.google.gwt.event.shared.HandlerRegistration;
#end


#macro(readerFields)
    private static Logger logger = Logger.getLogger("$typeContext.rwType.qualifiedSourceName");
    private final HandlerManager handlerManager;
    private final Map<String, $modelType> idMap;
#end


#macro(readerConstructorBody)
    this.handlerManager = new HandlerManager(this);
    this.idMap = new HashMap<String, $modelParameterizedType>();
#end


#macro(readerEventMethods)
    @Override
    public HandlerRegistration addModelReadHandler(ModelReadHandler<$modelParameterizedType> handler) 
    {
        return handlerManager.addHandler(ModelReadEvent.getType(), handler);
    }

    @Override
    public void fireEvent(GwtEvent<?> event) 
    {
        handlerManager.fireEvent(event);
    }
#end