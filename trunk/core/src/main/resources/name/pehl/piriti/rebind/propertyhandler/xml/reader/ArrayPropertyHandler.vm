#set($valueType = $property.type.qualifiedSourceName)
#set($parameterizedValueType = $property.type.parameterizedQualifiedSourceName)
#set($value = $property.variables.value)
#set($converter = $property.variables.newVariable("Converter"))
#set($elements = $property.variables.newVariable("Elements"))
#set($asList = $property.variables.newVariable("AsList"))

#if ($property.arrayType.componentType.isPrimitive())
    #set($componentType = $property.arrayType.componentType.qualifiedBoxedSourceName)
#else
    #set($componentType = $property.arrayType.componentType.parameterizedQualifiedSourceName)
#end

#logProperty()
$valueType $value = null;
List<Element> $elements = filterElements(element.selectNodes("$property.pathOrName"));
if (!${elements}.isEmpty())
{
    List<$componentType> $asList = new ArrayList<$componentType>(${elements}.size());
    Converter<$componentType> $converter = null;
    #if ($property.hasConverter())
        #customConverter() 
    #else 
        ## Temporarily set $valueType to $componentType to use #defaultConverter() macro   
        #set($valueType = $componentType)
        #defaultConverter()
        ## Switch back...
        #set($valueType = $property.type.qualifiedSourceName)
    #end
    for (Element nestedElement : $elements)
    {
        #set($nestedValue = $property.child.variables.value)
        #set($nestedValueAsString = $property.child.variables.valueAsString)
        #parse($property.child.template)
        if ($nestedValue != null) 
        {
            ${asList}.add($nestedValue);
        }
    }
    int index = 0;
    $value = new ${property.arrayType.componentType.parameterizedQualifiedSourceName}[${asList}.size()];
    for ($componentType tmpValue : $asList)
    {
        ${value}[index++] = tmpValue;
    }
}
if ($value != null) 
{
    #assignValue()
}
