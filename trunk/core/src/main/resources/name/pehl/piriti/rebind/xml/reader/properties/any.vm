#set($valueType = $property.type.qualifiedSourceName)
#set($parameterizedValueType = $property.type.parameterizedQualifiedSourceName)
#set($value = $property.variables.value)
#set($valueAsString = $property.variables.valueAsString)
#set($nodeValue = $property.variables.newVariable("NodeValue"))
#set($reader = $property.variables.newVariable("Reader"))
#set($converter = $property.variables.newVariable("Converter"))

#logProperty()
#foreach ($concreteType in $property.concreteTypes)
    // if there are any reader / writer definitions in $concreteType.parameterizedQualifiedSourceName, this ensures they are registered
    new ${concreteType.parameterizedQualifiedSourceName}();
#end

$parameterizedValueType $value = null;
#if ($property.native)
    Node $nodeValue = element.selectNode("$property.pathOrName");
    #if($TypeUtils.isNode($property.type))
        $value = $nodeValue;
    #elseif($TypeUtils.isNodeSubtype($property.type))
        if ($nodeValue instanceof $valueType) 
        {
            $value = ($parameterizedValueType)$nodeValue;
        }
    #else
        if (logger.isLoggable(SEVERE)) 
        {
            logger.log(SEVERE, "Cannot map property $property.name in ${modelType} nativly: Type $parameterizedValueType must be an instance of name.pehl.totoe.xml.client.Node.");
        }
    #end
#else
    XmlReader<$parameterizedValueType> $reader = xmlRegistry.getReader(${valueType}.class);
    if ($reader != null)
    {
        Node $nodeValue = element.selectNode("$property.pathOrName");
        if ($nodeValue != null && $nodeValue instanceof Element)
        {
            $value = ${reader}.read((Element)$nodeValue);
        }
    }
    else
    {
        String $valueAsString = element.selectValue("$property.pathOrName", $property.whitespaceHandling);
		if ($valueAsString != null)
		{
		    Converter<$parameterizedValueType> $converter = null;
		    #if ($property.hasConverter()) #customConverter() #else #defaultConverter() #end
		    if ($converter != null)
		    {
		        $value = ${converter}.convert($valueAsString);
		    }
		}    
    }
#end
if ($value != null) 
{
    #assignValue()
}
