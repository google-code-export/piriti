#set($reader = $property.variables.newVariable("Reader"))
#set($jsonObject = $property.variables.newVariable("JsonObject"))
#newConcreteTypes()
#if ($property.native)
    #if($TypeUtils.isJsonValue($property.type))
        $value = $jsonValue;
    #elseif($TypeUtils.isJsonValueSubtype($property.type))
        if ($jsonValue instanceof $valueType) 
        {
            $value = ($parameterizedValueType)$jsonValue;
        }
    #else
        if (logger.isLoggable(SEVERE)) 
        {
            logger.log(SEVERE, "Cannot map property $property.name in ${modelType} nativly: Type $parameterizedValueType must be an instance of JSONValue.");
        }
    #end
#else
    #if ($property.converter)
        #createConverter()
        $value = readValue($jsonValue, $converter);
    #else
        JsonReader<$parameterizedValueType> $reader = jsonRegistry.getReader(${valueType}.class);
        $value = readObject($jsonValue, $reader);
    #end
#end
